name: Relase on pocketbase/release
on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch latest pocketbase version
        id: pocketbase
        uses: muchobien/repo-releases@main
        with:
          repository: pocketbase/pocketbase
          excludes: draft,prerelease

      - name: Get latest package version
        id: package
        uses: actions/github-script@v6
        env:
          package_name: pocketbase
          package_type: container
        with:
          result-encoding: string
          script: |
            const {package_name,package_type} = process.env;
            const {data: packages} = await github.rest.packages.getAllPackageVersionsForPackageOwnedByUser({
              package_type: 'container',
              package_name: 'pocketbase',
              username: 'draxcodes' 
            })

            return packages[0].metadata.container.tags[0] || '0.0.0'

      - name: Cancel if there is no changes
        if: ${{ steps.pocketbase.outputs.version == steps.package.outputs.result }}
        uses: actions/github-script@v6
        with:
          script: |
            core.warning('Version match found.');
            core.setFailed('Version already released');

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/draxcodes/pocketbase
          tags: |
            type=semver,pattern={{version}},value=${{ steps.pocketbase.outputs.version }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: VERSION=${{ steps.pocketbase.outputs.version }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
